@layout LoginLayout
@page "/auth/login"
@using OpenCMS.Web.Application.Interfaces


@inject IAuthenticationService _authenticationService
@inject NavigationManager _navigationManager

<EditForm Model="loginModel" OnValidSubmit="submitForm">
    <div class="input-group mb-2">
        <MudTextField Label="Password" Variant="Variant.Filled" @bind-Value="loginModel.Username" InputType="InputType.Text">

        </MudTextField>
    </div>
    <div class="input-group mb-2">

        <MudTextField Label="Password" Variant="Variant.Filled" @bind-Value="loginModel.Password" InputType="InputType.Password">

        </MudTextField>
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
    <div class="row">

        <!-- /.col -->
        <div class="col-12">
            <MudButton Disabled="isLoading" Variant="Variant.Filled" DisableElevation="false" FullWidth="true" Color="Color.Primary" ButtonType="ButtonType.Submit">

                @if (isLoading)
                {
                    <MudProgressCircular Color="Color.Primary" Size="Size.Small" Indeterminate="true" />
                }

                Login
            </MudButton>
        </div>
    </div>
</EditForm>
@code {

    bool isLoading = false;
    private LoginModel loginModel = new LoginModel();
    private void SignIn()
    {
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; }
        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }

    private async void submitForm()
    {
        isLoading = true;
        var loginResult = await _authenticationService.Login(loginModel.Username, loginModel.Password);
        if (loginResult.IsSuccess)
        {
            _navigationManager.NavigateTo("/");
        }

    }

}
