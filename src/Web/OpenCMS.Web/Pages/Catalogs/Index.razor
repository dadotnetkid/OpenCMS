@page "/catalogs"
@inject ICatalogsService _catalogService
<div class="card">
    <div class="card-header">
        <h5>Catalogs</h5>
    </div>
    <div class="card-body">
        
        <MudGrid>
            <MudItem xs="12">
                <MudTabs Elevation="4" Rounded="true" Centered="false" Color="@Color.Primary">
                    <MudTabPanel Text="All" OnClick="@(()=>LoadByCategory(0))" />
                    <MudTabPanel Text="Sold" OnClick="@(()=>LoadByCategory(1))"/>
                    <MudTabPanel Text="Bought" OnClick="@(()=>LoadByCategory(2))"/>
                    <MudTabPanel Text="Inventoried"OnClick="@(()=>LoadByCategory(3))" />
                </MudTabs>
            </MudItem>
            <MudItem xs="12">
                <MudTable Items="dataSource" Loading="isLoading" Dense="true" Hover="true" Bordered="true" Striped="true" LoadingProgressColor="Color.Info">
                    <HeaderContent>
                        <MudTh Style="width: 10%; text-align: center">
                        </MudTh>
                        <MudTh>Item Number</MudTh>
                        <MudTh>Name</MudTh>
                        <MudTh>On Hand</MudTh>
                        <MudTh>Last Cost</MudTh>
                        <MudTh>Sell Price</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>
                            <MudIconButton Icon="@Icons.Filled.Build"></MudIconButton>
                            <MudIconButton Icon="@Icons.Filled.DeleteForever"></MudIconButton>
                        </MudTd>
                        <MudTd>@context.ItemNumber</MudTd>
                        <MudTd>@context.Name</MudTd>
                        <MudTd>@context.LastCost?.ToString("n2")</MudTd>
                        <MudTd>@context.SellPrice?.ToString("n2")</MudTd>
                        <MudTd>@context.Quantity?.ToString("n2")</MudTd>

                    </RowTemplate>
                </MudTable>
            </MudItem>
        </MudGrid>
    </div>
</div>
@code{
    bool isLoading = true;
    List<CatalogModel> dataSource = new();
    protected override async Task OnInitializedAsync()
    {

        await LoadByCategory(0);


    }

    private async Task LoadByCategory(int category)
    {
        isLoading = true;
        var list = await _catalogService.GetAll();
        switch (category)
        {

            case 1:
                dataSource = list.Items.Where(x => x.ISellThisItem == true).ToList();
                break;
            case 2:
                dataSource = list.Items.Where(x => x.IBuyThisItem== true).ToList();
                break;
            case 3:
                dataSource = list.Items.Where(x => x.IInventoryThisItem== true).ToList();
                break;
            default:
                dataSource = list.Items;
                break;
        }
        isLoading = false;
    }

}