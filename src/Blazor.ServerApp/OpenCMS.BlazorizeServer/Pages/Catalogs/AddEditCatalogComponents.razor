@using OpenCMS.Web.Application.ApiClients
@inject IAccountsApiClient AccountApiClient
<SfDialog Target="#target" Width="1024px" AllowDragging="true" ShowCloseIcon="true" @bind-Visible="@ShowDialog">
    <DialogPositionData Y="20px"></DialogPositionData>
    <DialogTemplates>
        <Header> Add Edit Catalogs</Header>
        <Content>
            <SfTab CssClass="BlazorTab" LoadOn="ContentLoad.Init">
                <TabItems>
                    <TabItem>
                        <ChildContent>
                            <TabHeader Text="Profile"></TabHeader>
                        </ChildContent>
                        <ContentTemplate>
                            <CatalogProfileComponent OnDialogClose="OnDialogClose" Model="Model" Accounts="_accounts" OnModelChange="OnModelChange" />
                        </ContentTemplate>
                    </TabItem>
                    <TabItem Disabled="!Model.IBuyThisItem">
                        <ChildContent>
                            <TabHeader Text="Buying Details"></TabHeader>
                        </ChildContent>
                        <ContentTemplate>
                            <BuyingDetailsComponent Model="@Model.BuyingDetails" Accounts="_accounts" OnDialogClose="OnDialogClose"  OnModelChange="@OnModelChange"></BuyingDetailsComponent>
                        </ContentTemplate>
                    </TabItem>
                    <TabItem Disabled="!Model.ISellThisItem">
                        <ChildContent>
                            <TabHeader Text="Selling Details"></TabHeader>
                        </ChildContent>
                        <ContentTemplate>
                            <SellingDetailsComponent Accounts="_accounts" Model="Model.SellingDetails" OnModelChange="OnModelChange"></SellingDetailsComponent>
                        </ContentTemplate>
                    </TabItem>
                </TabItems>

            </SfTab>

        </Content>
    </DialogTemplates>
    <DialogEvents Closed="@DialogClose" OnOpen="OnDialogOpen"></DialogEvents>
    <DialogButtons>

    </DialogButtons>
</SfDialog>
@code {
    [Parameter] public bool ShowDialog { get; set; }
    [Parameter] public CatalogModel Model { get; set; }
    [Parameter] public EventCallback<bool> OnDialogClose { get; set; }
    private FluentValidationValidator _fluentValidationValidator;
    private List<AccountsModel> _accounts = new();
    private void DialogClose()
    {
        ShowDialog = false;
    }



    private async Task OnDialogOpen()
    {
        if (!_accounts.Any())
        {
            var accounts = await AccountApiClient.GetAll();
            _accounts = accounts.Data;
        }
    }

    private void OnModelChange(CatalogModel model)
    {
        Model = model;
        StateHasChanged();
    }

}